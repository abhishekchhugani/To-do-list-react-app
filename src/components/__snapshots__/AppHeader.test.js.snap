// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot test 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AppHeader />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="nav-wrapper blue"
>
        <div
                className="brand-logo center"
        >
                <i
                        className="medium material-icons"
                >
                        assignment
                </i>
                Todoer
        </div>
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="brand-logo center"
>
          <i
                    className="medium material-icons"
          >
                    assignment
          </i>
          Todoer
</div>,
        "className": "nav-wrapper blue",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <i
              className="medium material-icons"
>
              assignment
</i>,
            "Todoer",
          ],
          "className": "brand-logo center",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "assignment",
              "className": "medium material-icons",
            },
            "ref": null,
            "rendered": "assignment",
            "type": "i",
          },
          "Todoer",
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "nav",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="nav-wrapper blue"
>
          <div
                    className="brand-logo center"
          >
                    <i
                              className="medium material-icons"
                    >
                              assignment
                    </i>
                    Todoer
          </div>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="brand-logo center"
>
            <i
                        className="medium material-icons"
            >
                        assignment
            </i>
            Todoer
</div>,
          "className": "nav-wrapper blue",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <i
                className="medium material-icons"
>
                assignment
</i>,
              "Todoer",
            ],
            "className": "brand-logo center",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "assignment",
                "className": "medium material-icons",
              },
              "ref": null,
              "rendered": "assignment",
              "type": "i",
            },
            "Todoer",
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "nav",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
