// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot test 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <AppHeader />,
        <div
          className="container mt40 center"
>
          <TaskSummary
                    todos={Array []}
          />
          <AddItem
                    addTodoItem={[Function]}
          />
          <TodoList
                    deleteTodo={[Function]}
                    markComplete={[Function]}
                    sortItems={[Function]}
                    todos={Array []}
          />
</div>,
      ],
      "className": "todo-app",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <TaskSummary
              todos={Array []}
/>,
            <AddItem
              addTodoItem={[Function]}
/>,
            <TodoList
              deleteTodo={[Function]}
              markComplete={[Function]}
              sortItems={[Function]}
              todos={Array []}
/>,
          ],
          "className": "container mt40 center",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "todos": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "addTodoItem": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "deleteTodo": [Function],
              "markComplete": [Function],
              "sortItems": [Function],
              "todos": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <AppHeader />,
          <div
            className="container mt40 center"
>
            <TaskSummary
                        todos={Array []}
            />
            <AddItem
                        addTodoItem={[Function]}
            />
            <TodoList
                        deleteTodo={[Function]}
                        markComplete={[Function]}
                        sortItems={[Function]}
                        todos={Array []}
            />
</div>,
        ],
        "className": "todo-app",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <TaskSummary
                todos={Array []}
/>,
              <AddItem
                addTodoItem={[Function]}
/>,
              <TodoList
                deleteTodo={[Function]}
                markComplete={[Function]}
                sortItems={[Function]}
                todos={Array []}
/>,
            ],
            "className": "container mt40 center",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "todos": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "addTodoItem": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "deleteTodo": [Function],
                "markComplete": [Function],
                "sortItems": [Function],
                "todos": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
